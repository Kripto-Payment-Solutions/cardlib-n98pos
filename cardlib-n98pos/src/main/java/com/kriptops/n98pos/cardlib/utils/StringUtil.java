/**
 * Generated by smali2java 1.0.0.558
 * Copyright (C) 2013 Hensence.com
 */

package com.kriptops.n98pos.cardlib.utils;



public class StringUtil {

    public static String bytes2HexStr(byte[] arr, int offset, int len) {
        StringBuilder sb = new StringBuilder();
        if(arr != null && 0 <= offset && ((offset + len) <= arr.length)) {
            for(int i = offset; i < (len + offset); i++) {
                sb.append(String.format("%02x", arr[i]));
            }
        }
        return sb.toString().toUpperCase();
    }

    public static String byte2HexStr(byte[] arr) {
        if (arr == null) {
            return null;
        }

        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < arr.length; i++) {
            sb.append(String.format("%02x", arr[i]));
        }
        return sb.toString().toUpperCase();
    }
    public static byte[] hexStr2Bytes(String s) {
        if (s.length() % 2 == 0) {
            return hex2byte(s.getBytes(), 0, s.length() >> 1);
        } else {
            // Padding left zero to make it even size #Bug raised by tommy
            return hexStr2Bytes("0" + s);
        }
    }

    public static byte[] hex2byte(byte[] b, int offset, int len) {
        byte[] d = new byte[len];
        for (int i = 0; i < len * 2; i++) {
            // Buginfo when i oddness then this line won't be work
            // but in the for judge i>0 & i++ so i absolutely won't be oddness
            int shift = ((i % 2 == 1) ? 0 : 4);
            d[i >> 1] |= Character.digit((char) b[offset + i], 16) << shift;
        }
        return d;
    }

}
